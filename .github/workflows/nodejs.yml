name: DEV Node.js CI

on:
  push:
    branches: ["master"]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.11.0]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: moi-project
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: "Install Dependencies"
        run:
          yarn install

      - name: "Init database"
        run:
          npx prisma db push
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/moi-project

      - name: "Build Project"
        run: |
          yarn build
          rm -r node_modules
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/moi-project

      - name: AWS CodeDeploy
        uses: sourcetoad/aws-codedeploy-action@v1
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          aws_region: eu-west-1
          codedeploy_name: moi-project
          codedeploy_group: dev
          codedeploy_register_only: false
          s3_bucket: moi-project-bucket
          s3_folder: dev
          max_polling_iterations: 0
          directory: ./
